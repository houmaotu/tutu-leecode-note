题目：
Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

知识点：
一个一个查就可以了

代码：
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:
        return self.check(root,root)

                
    def check(self,r1,r2):
        if r1 is None and r2 is None:
            return True
        
        if (r1 is not None) and (r2 is not None):
            if r1.val != r2.val:
                return False
            return self.check(r1.left,r2.right) and self.check(r1.right,r2.left)
        
        return False
        
 知识点：
 
 注意是None的edge case 
 和我的小可爱打电话的时候容易分心
 
 
