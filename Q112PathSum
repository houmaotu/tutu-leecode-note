题目：
Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.

A leaf is a node with no children.

思路：
递归呀

代码：
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:
        if root is None:
            return False
        
        if root.left is None and root.right is None:
            return targetSum == root.val
        
        if root.left is not None and root.right is not None:
            return self.hasPathSum(root.left,targetSum-root.val) or self.hasPathSum(root.right,targetSum-root.val)
        
        if root.left is None and root.right is not None:
            return self.hasPathSum(root.right,targetSum-root.val)
        
        if root.left is not None and root.right is None:
            return self.hasPathSum(root.left,targetSum-root.val)
        
   知识点：
   还是edge case
            
