题目：
You are given two m x n binary matrices grid1 and grid2 containing only 0's (representing water) and 1's (representing land). An island is a group of 1's connected 4-directionally (horizontal or vertical). Any cells outside of the grid are considered water cells.

An island in grid2 is considered a sub-island if there is an island in grid1 that contains all the cells that make up this island in grid2.

Return the number of islands in grid2 that are considered sub-islands.

思路：
就是dfs

代码：
class Solution:
    def countSubIslands(self, grid1: List[List[int]], grid2: List[List[int]]) -> int:
        m,n = len(grid2),len(grid2[0])
        lib = {} #1 for true 0 for false 2 for pending
        res = 0
        def dfs(i,j):
            if i<0 or j<0 or i>=m or j>=n or grid2[i][j] == 0:
                return True
            elif (i,j) in lib:
                return lib[(i,j)]!=0
            elif grid1[i][j] == 0:
                lib[(i,j)] = 0
                return False
            else:
                lib[(i,j)] = 2
                if dfs(i+1,j) and dfs(i,j+1) and dfs(i-1,j) and dfs(i,j-1):
                    lib[(i,j)] = 1
                    return True
                else:
                    lib[(i,j)] = 0
                    return False
                    
                
                
            
        
        for i in range(m):
            for j in range(n):
                if (i,j) not in lib and grid2[i][j] == 1 and dfs(i,j):
                    res += 1
                    
        return res
        
