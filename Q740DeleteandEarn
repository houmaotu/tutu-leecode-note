题目：
You are given an integer array nums. You want to maximize the number of points you get by performing the following operation any number of times:

Pick any nums[i] and delete it to earn nums[i] points. Afterwards, you must delete every element equal to nums[i] - 1 and every element equal to nums[i] + 1.
Return the maximum number of points you can earn by applying the above operation some number of times.

 思路：
 dp 只搞unique的dp
 
 代码：
 class Solution:
    def deleteAndEarn(self, nums: List[int]) -> int:
        lib = collections.Counter(nums)
        nums = list(set(nums))
        nums.sort()
        n = len(nums)
        dp = [0] * (n+2)
        for i in range(n-1,-1,-1):
            num = nums[i]
            if num + 1 in lib:
                dp[i] = max(num * lib[num] + dp[i+2], dp[i+1])
            else:
                dp[i] = num * lib[num] + dp[i+1]
                
        return dp[0]
            
