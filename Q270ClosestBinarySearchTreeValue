题目：
Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.

Note:

Given target value is a floating point.
You are guaranteed to have only one unique value in the BST that is closest to the target.

思路：
就是一个一个读

代码：
Class Solution:
    def closest_value(self, root: TreeNode, target: float) -> int:
        d = abs(root.val - target)
        res = root.val
        while root:
            if root.val == target:
                return root.val
            elif root.val > target:
                if abs(root.val - target) < d:
                    d = abs(root.val - target)
                    res = root.val
                root = root.left
            else:
                if abs(root.val - target) < d:
                    d = abs(root.val - target)
                    res = root.val
                root = root.right			
        return res
		
注意：
这个没跑过 兔兔自己写的 思路验证了 这中间的东西巨大的我肯定搞得定

妈蛋蛋 之前写错了 这是改过来的
	
