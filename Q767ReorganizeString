题目：
Given a string s, rearrange the characters of s so that any two adjacent characters are not the same.

Return any possible rearrangement of s or return "" if not possible.

 思路：
 就是每次都用出现最多的
 用了就先拿出来 然后再放回去就行了 用heap实现

代码：
class Solution:
    def reorganizeString(self, s: str) -> str:
        count = collections.Counter(s)
        maxHeap = [[-cnt,ch] for ch,cnt in count.items()]
        heapq.heapify(maxHeap)
        prev = None
        res = ''
        while maxHeap or prev:
            if prev and not maxHeap:
                return ''
            
            cnt,ch = heapq.heappop(maxHeap)
            res += ch
            cnt += 1
            
            if prev:
                heapq.heappush(maxHeap,prev)
                prev = None
                
            if cnt != 0:
                prev = [cnt,ch]
        
        return res
        
