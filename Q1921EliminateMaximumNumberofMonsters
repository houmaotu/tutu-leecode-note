题目：
You are playing a video game where you are defending your city from a group of n monsters. You are given a 0-indexed integer array dist of size n, where dist[i] is the initial distance in kilometers of the ith monster from the city.

The monsters walk toward the city at a constant speed. The speed of each monster is given to you in an integer array speed of size n, where speed[i] is the speed of the ith monster in kilometers per minute.

You have a weapon that, once fully charged, can eliminate a single monster. However, the weapon takes one minute to charge.The weapon is fully charged at the very start.

You lose when any monster reaches your city. If a monster reaches the city at the exact moment the weapon is fully charged, it counts as a loss, and the game ends before you can use your weapon.

Return the maximum number of monsters that you can eliminate before you lose, or n if you can eliminate all the monsters before they reach the city.

思路：
一大波僵尸即将到来 有举例和速度 那么就求出来到的时间就好了 

因为可以点杀 那就好办了 要是必须砍掉最前面的 那就恶心了

代码：
class Solution:
    def eliminateMaximum(self, dist: List[int], speed: List[int]) -> int:
        minreach = []
        for d, s in zip(dist,speed):
            minute = math.ceil(d/s)
            minreach.append(minute)
            
        minreach.sort()
        res = 0
        for minute in range(len(minreach)):
            if minute >= minreach[minute]:
                return res
            res += 1
        return res
