题目：
Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.

An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.

思路：
bfs dfs都可以
找到1 去蔓延  记录好查过了的
bfs 用一个queue 去搞要做的
dfs 继续搜索上下左右
其实都一样的



代码：
bfs:
class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        checked = set()
        row, col = len(grid),len(grid[0])
        res = 0
        for i in range(row):
            for j in range(col):
 
                if grid[i][j]== "1" and ((i,j) not in checked):
                    res += 1
                    queue = deque([(i,j)])
                    while queue:
                        ii, jj = queue.popleft()

                        if ii - 1 >= 0 and (ii-1,jj) not in checked and grid[ii-1][jj] == "1":
                            checked.add((ii-1,jj))
                            queue.append((ii-1,jj))
                            
                        if ii + 1 <= row - 1 and (ii+1,jj) not in checked and grid[ii+1][jj] == "1":
                            checked.add((ii+1,jj))
                            queue.append((ii+1,jj))
                            
                        if jj - 1 >= 0 and (ii,jj-1) not in checked and grid[ii][jj-1] == "1":
                            checked.add((ii,jj-1))
                            queue.append((ii,jj-1))
                            
                        if jj + 1 <= col - 1 and (ii-1,jj+1) not in checked and grid[ii][jj+1] == "1": 
                            checked.add((ii,jj+1))
                            queue.append((ii,jj+1))

                            
        return res
        
  知识点：
  用集合记录不如改数字 这方法太贼了
