题目：
Given an integer array nums, handle multiple queries of the following type:

Calculate the sum of the elements of nums between indices left and right inclusive where left <= right.
Implement the NumArray class:

NumArray(int[] nums) Initializes the object with the integer array nums.
int sumRange(int left, int right) Returns the sum of the elements of nums between indices left and right inclusive (i.e. nums[left] + nums[left + 1] + ... + nums[right]).

思路：
存储部分和

代码：
class NumArray:

    def __init__(self, nums: List[int]):
        n = len(nums)
        self.partialsum = [0 for i in range(n)]
        self.partialsum[0] = nums[0]
        for i in range(1,n):
            self.partialsum[i] += self.partialsum[i-1] + nums[i]
        #print(self.partialsum)
            
        

    def sumRange(self, left: int, right: int) -> int:
        if left == 0:
            return self.partialsum[right]
        else:
            return self.partialsum[right] - self.partialsum[left - 1]
  
  知识点：
  注意0的edge case
        
