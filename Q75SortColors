题目：
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

思路；
挂羊头卖狗肉 就是sort 012

用指针换换换

左边到哪了 右边到哪了 扫到哪了
扫到0 换左 扫到2 换右 扫到1 扫下一个

而且因为扫到0的时候 之前不会存在2 因为扫过了 2被扔后面去了 换的必定是1 所以扫到0的时候换左和扫下一个可同时

代码：
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        
        onect = 0
        l = 0
        r = len(nums) - 1
        i = 0
        
        while i <= r:
            if nums[i] == 0:
                if l < i:
                    nums[i],nums[l] = nums[l],nums[i]
                l += 1
                i += 1
                    
            elif nums[i] == 1:
                i += 1
            else:
                nums[i],nums[r] = nums[r],nums[i]
                r -= 1
                

        return nums
        
  知识点：
  好麻烦的判断呀

