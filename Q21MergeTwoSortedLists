题目：
Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.

思路：linked list的基本操作 指针挪挪挪
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        curr = dummy = ListNode(0)
        
        while l1 and l2:
            if l1.val < l2.val:
                curr.next = l1
                l1 = l1.next
            else:
                curr.next = l2
                l2 = l2.next
            curr = curr.next
        curr.next = l1 or l2
        return dummy.next
        
 知识点：滚滚喜欢爬床单 把床单的角给扒掉 真的是个小可爱 我拿滚滚没办法
        
