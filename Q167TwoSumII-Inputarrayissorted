题目：
Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number. Let these two numbers be numbers[index1] and numbers[index2] where 1 <= first < second <= numbers.length.

Return the indices of the two numbers, index1 and index2, as an integer array [index1, index2] of length 2.

The tests are generated such that there is exactly one solution. You may not use the same element twice.

思路：
改进 最左和最优 不够就左+1 超了就右-1 显然不可能越过要找的的两个index

代码：
class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        l = 0
        r = len(numbers) - 1
        while l < r:
            if numbers[l] + numbers[r] == target:
                return (l + 1,r + 1)
            elif numbers[l] + numbers[r] > target:
                r -= 1
            else:
                l += 1
                
        return (-1,-1)
    
    知识点：
    有的小可爱非要说我诽谤他 啧啧 我看了 还是复杂度没问题 速度就超过了5% 这又是什么问题呢
    而且呀 嘿嘿 厚毛兔只说了神秘力量哦 某些小可爱不打自招了哦
