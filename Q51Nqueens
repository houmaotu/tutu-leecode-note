The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.

Given an integer n, return all distinct solutions to the n-queens puzzle. You may return the answer in any order.

Each solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space, respectively.

 
思路：
backtracking

纪律diag offdiag col 一行一行走

class Solution:
    def solveNQueens(self, n: int) -> List[List[str]]:
        col = set()
        posD = set() #r + c
        negD = set() #r - c
        res = []
        board = [["."]*n for _ in range(n)]
        
        def backtrack(r):
            if r == n:
                copy = [''.join(row) for row in board]
                res.append(copy)
            for c in range(n):
                if c in col or (r+c) in posD or (r-c) in negD:
                    continue
                    
                col.add(c)
                posD.add(r+c)
                negD.add(r-c)
                
                board[r][c] = 'Q'
                
                backtrack(r+1)
                
                col.remove(c)
                posD.remove(r+c)
                negD.remove(r-c)
                
                board[r][c] = '.'
        
        backtrack(0)
        
        return res
