

Given an integer array nums and an integer k, return true if nums has a continuous subarray of size at least two whose elements sum up to a multiple of k, or false otherwise.

An integer x is a multiple of k if there exists an integer n such that x = n * k. 0 is always a multiple of k.

 




class Solution:
    def checkSubarraySum(self, nums: List[int], k: int) -> bool:
        lib = {0:-1}
        r = 0
        for i,num in enumerate(nums):
            r = (r + num) % k
            if r not in lib:
                lib[r] = i
            elif i - lib[r]>1:
                return True
        #print(lib)   
        return False
