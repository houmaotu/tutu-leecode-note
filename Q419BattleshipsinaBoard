题目：
Given an m x n matrix board where each cell is a battleship 'X' or empty '.', return the number of the battleships on board.

Battleships can only be placed horizontally or vertically on board. In other words, they can only be made of the shape 1 x k (1 row, k columns) or k x 1 (k rows, 1 column), where k can be of any size. 
At least one horizontal or vertical cell separates between two battleships (i.e., there are no adjacent battleships).

思路：
还是搜索 不需要lib 检查过了就吧X换成为*

代码：
class Solution:
    def countBattleships(self, board: List[List[str]]) -> int:
        m, n = len(board), len(board[0])

        def change(i,j):
            if 0<= i and i< m and 0<= j and j<n and board[i][j] == "X":
                board[i][j] = "*"
                change(i+1,j)
                change(i-1,j)
                change(i,j + 1)
                change(i, j -1)
            
        ct = 0
        for i in range(m):
            for j in range(n):
                if board[i][j] == "X":
                    change(i,j)
                    ct += 1
                    
        return ct
        
 知识点：
 不要不小心多写一个等于号 妈蛋蛋
 
 哎呀：
 不对劲 还有个follow up 不改数字 那就这样子
 利用只有先搜索的顺序 出现X后 确认是不是战舰的head 当他上面或者左边不是X就可以
 
 class Solution:
    def countBattleships(self, board: List[List[str]]) -> int:
        m, n = len(board), len(board[0])

        ct = 0
        for i in range(m):
            for j in range(n):
                if board[i][j] == "X" and (i == 0 or board[i - 1][j] != "X") and (j == 0 or board[i][j-1] != "X"):
                    
                    ct += 1
                    
        return ct
                
