题目：
A peak element is an element that is strictly greater than its neighbors.

Given an integer array nums, find a peak element, and return its index. If the array contains multiple peaks, return the index to any of the peaks.

You may imagine that nums[-1] = nums[n] = -∞.

You must write an algorithm that runs in O(log n) time.

思路：
O(log n) 就是二分法呀 嗷呜呜

代码：
class Solution:
    def findPeakElement(self, nums: List[int]) -> int:
        if len(nums) == 1:
            return 0
        if nums[0] > nums[1]:
            return 0
        if nums[-1] > nums[-2]:
            return len(nums) - 1
        
        l = 0
        r = len(nums) -1
        
        while l < r:
            mid = (l + r) // 2
            if nums[mid] < nums[mid - 1]:
                r = mid
                
            elif nums[mid] < nums[mid + 1]:
                l = mid
                
            else:
                return mid
                
  知识点：
  跳跳鼠好玩不
