题目：
You are given a 0-indexed array nums of distinct integers. You want to rearrange the elements in the array such that every element in the rearranged array is not equal to the average of its neighbors.

More formally, the rearranged array should have the property such that for every i in the range 1 <= i < nums.length - 1, (nums[i-1] + nums[i+1]) / 2 is not equal to nums[i].

Return any rearrangement of nums that meets the requirements.

 
 思路：
 一个西瓜分两半 每个数字不是邻居的平均 那么 分两堆 左边的小 右边的大 小的在奇数 大的在偶数
 
 代码：
 class Solution:
    def rearrangeArray(self, nums: List[int]) -> List[int]:
        n = len(nums)
        nums.sort()
        res = [0] * n
        for i in range(n//2):
            res[2*i] = nums[i]
            res[2*i + 1] = nums[(n+1)//2 + i ]
        if n%2==1:
            res[-1] = nums[n//2]
            
        return res
            
 知识点：
 奥呜呜呜
