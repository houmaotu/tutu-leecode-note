题目：
You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n,
representing the number of elements in nums1 and nums2 respectively.

Merge nums1 and nums2 into a single array sorted in non-decreasing order.

The final sorted array should not be returned by the function, but instead be stored inside the array nums1. 
To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.

思路：
半夜敲门问声谁


代码：

class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """
        Do not return anything, modify nums1 in-place instead.
        """

        if m == 0:
            nums1[:] = nums2[:]
        
        elif nums2:
            r = m + n - 1
            i = m - 1
            j = n - 1
            while i>=0 and j>=0:
                if nums1[i]>=nums2[j]:
                    nums1[r] = nums1[i]
                    r -= 1
                    i -= 1
                else:
                    nums1[r] = nums2[j]
                    r -= 1
                    j -= 1
            if i<0:
                nums1[:r+1] = nums2[:j+1]
                
   知识点：
   用[:]访问进去
