Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.

每个柱子延拓 用stack

发现更大的 加进来
发现更小的 pop 然后小的可以左 因此index写到pop的

class Solution:
    def largestRectangleArea(self, heights: List[int]) -> int:
        maxArea = 0
        stack = []  #(index, height)
        
        for i, h in enumerate(heights):
            start = i
            while stack and stack[-1][1] > h:
                index, height = stack.pop()
                maxArea = max(maxArea, height * (i - index))
                start = index
            stack.append((start,h))
        
        for i,h in stack:
             maxArea = max(maxArea, h * (len(heights) - i))
                
        return maxArea
            
