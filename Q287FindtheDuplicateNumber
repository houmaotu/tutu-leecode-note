题目：
Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.

思路：
1 视为linked list 数值是为pointer 所以题目为找到cycle
2 用Floyd's Cycle Detection 找 slow fast 在0， slow 动1 fast动2 直到相遇 然后slow2为0 ， slow slow2一起动1 相遇就是循环的起始

代码：
class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        slow, fast = 0, 0
        while True:
            slow = nums[slow]
            fast = nums[fast]
            fast = nums[fast]
            if slow == fast:
                break
                
        slow2 = 0
        while True:
            slow = nums[slow]
            slow2 = nums[slow2]
            if slow == slow2:
                return slow
                
知识点：
Floyd's Cycle Detection
