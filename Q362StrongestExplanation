Design a hit counter which counts the number of hits received in the past 5 minutes.
Each function accepts a timestamp parameter (in seconds granularity) and you may assume that calls are being made to the system in chronological order (ie, the timestamp is monotonically increasing). You may assume that the earliest timestamp starts at 1.
It is possible that several hits arrive roughly at the same time.

https://www.youtube.com/watch?v=rhr5jyues1k

就是个deque
方便两头pop
class HitCounter:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.data = collections.deque()        

    def hit(self, timestamp: int) -> None:
        """
        Record a hit.
        @param timestamp - The current timestamp (in seconds granularity).
        """
        self.data.append(timestamp)

    def getHits(self, timestamp: int) -> int:
        """
        Return the number of hits in the past 5 minutes.
        @param timestamp - The current timestamp (in seconds granularity).
        """
        while self.data and timestamp - self.data[0] >= 300:
            self.data.popleft()
        return len(self.data)
————————————————
版权声明：本文为CSDN博主「闲庭信步的空间」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/danspace1/article/details/87810856
