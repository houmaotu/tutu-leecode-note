
Given an integer n, return all the numbers in the range [1, n] sorted in lexicographical order.

You must write an algorithm that runs in O(n) time and uses O(1) extra space. 

 

class Solution:
    def lexicalOrder(self, n: int) -> List[int]:
        #TC: O(n)
        #SC: O(1)
        #Just use dfs to go through all situations

        res = []

        def dfs(num):
            for i in range(10):
                if 10*num + i <= n:
                    res.append(10*num + i)
                    dfs(10*num+i)

        for i in range(1,10):
            if i <= n:
                res.append(i)
                dfs(i)

        return res
