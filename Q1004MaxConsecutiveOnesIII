Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.

 

class Solution:
    def longestOnes(self, nums: List[int], k: int) -> int:
        n = len(nums)
        if n<= k:
            return n
        l,r = 0,0
        ct = 0
        res = 0
        while r<n:
            #if nums[r] == 1:               
            # nums[r] == 0
            if nums[r] == 0 and ct < k:
                ct += 1
            elif nums[r] == 0 and ct == k:
                while nums[l] != 0:
                    l += 1
                l += 1
            #print(l,r)
            res = max(r-l+1, res)
            r += 1
        return res
