题目;
You are given an array of non-overlapping intervals intervals where intervals[i] = [starti, endi] represent the start and the end of the ith interval and intervals is sorted in ascending order by starti. You are also given an interval newInterval = [start, end] that represents the start and end of another interval.

Insert newInterval into intervals such that intervals is still sorted in ascending order by starti and intervals still does not have any overlapping intervals (merge overlapping intervals if necessary).

Return intervals after the insertion.

思路：

overlap 
interval [   ]
 new        [    ]
   
 interval    [   ]
 new       [   ]
 
 
   [  ]    [   ]  [  ]        [    ]  [   ]
               [                     ]
               
  overlap:相应的右边都比左边大
  
  代码：
  class Solution:
    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:
        if intervals == []:
            return [newInterval]
        if intervals[0][0] >  newInterval[1]:
            return [newInterval] + intervals
            
        res = []
        l = newInterval[0]
        r = newInterval[1]
        d = True
        for i,interval in enumerate(intervals):
            if interval[1] < newInterval[0]:
                res.append(interval)
            elif interval[0] <= newInterval[1]:
                l = min(l,interval[0],newInterval[0])
                r = max(r,interval[1],newInterval[1]) 
            else:
                if d:
                    res.append([l,r])
                    d = False
                res.append(interval)
                
        if d:
            res.append([l,r])
            
        return res
        
      知识点：各种乱七八糟的情况考虑清楚 新的东西和厚毛兔一样小就放在最前面 因为我是在overlap结束之后的第一个位置增加的 如果新的东西和巨兔一样巨大也需要考虑吧
